--exclude=.svn
--exclude=.git
--exclude=vendor
--exclude=bundle
--exclude=build
--exclude=bin
--exclude=out
--exclude=vendor
--c++-kinds=+p
--fields=+iaSlkKmnz
--extra=+qf
--if0=no
--totals=yes
--tag-relative=no
--excmd=mixed
--sort=foldcase
--links=yes

--langdef=markdown
--langmap=markdown:.mkd
--langmap=markdown:.markdown
--langmap=markdown:.md
--langmap=php:.php
--langmap=php:.phtml

--regex-markdown=/^#[ \t]+(.*)\{?/\1/h,Heading_L1/
--regex-markdown=/^##[ \t]+(.*)\{?/\1/i,Heading_L2/
--regex-markdown=/^###[ \t]+(.*)\{?/\1/k,Heading_L3/
--regex-markdown=/^####[ \t]+(.*)\{?/\1/k,Heading_L4/
--regex-markdown=/^#####[ \t]+(.*)\{?/\1/k,Heading_L5/
--regex-markdown=/^######[ \t]+(.*)\{?/\1/k,Heading_L6/

--langdef=css
--langdef=scss
--langdef=sass
--langmap=css:.css
--langmap=scss:.scss
--langmap=sass:.scss
--regex-css=/^[ \t]*\.([A-Za-z0-9_-]+)/#\1/c,class,classes/
--regex-css=/^[ \t]*#([A-Za-z0-9_-]+)/.\1/i,id,ids/
--regex-css=/^[ \t]*(([A-Za-z0-9_-]+[ \t\n,]+)+)\{/\1/t,tag,tags/
--regex-css=/^[ \t]*@media\s+([A-Za-z0-9_-]+)/\1/m,media,medias/

--langdef=Elixir
--langmap=Elixir:.ex
--langmap=Elixir:.exs
--regex-Elixir=/^[ \t]*def(p?)[ \t]+([a-z_][a-zA-Z0-9_?!]*)/\2/f,functions,functions (def ...)/
--regex-Elixir=/^[ \t]*defcallback[ \t]+([a-z_][a-zA-Z0-9_?!]*)/\1/c,callbacks,callbacks (defcallback ...)/
--regex-Elixir=/^[ \t]*defdelegate[ \t]+([a-z_][a-zA-Z0-9_?!]*)/\1/d,delegates,delegates (defdelegate ...)/
--regex-Elixir=/^[ \t]*defexception[ \t]+([A-Z][a-zA-Z0-9_]*\.)*([A-Z][a-zA-Z0-9_?!]*)/\2/e,exceptions,exceptions (defexception ...)/
--regex-Elixir=/^[ \t]*defimpl[ \t]+([A-Z][a-zA-Z0-9_]*\.)*([A-Z][a-zA-Z0-9_?!]*)/\2/i,implementations,implementations (defimpl ...)/
--regex-Elixir=/^[ \t]*defmacro(p?)[ \t]+([a-z_][a-zA-Z0-9_?!]*)\(/\2/a,macros,macros (defmacro ...)/
--regex-Elixir=/^[ \t]*defmacro(p?)[ \t]+([a-zA-Z0-9_?!]+)?[ \t]+([^ \tA-Za-z0-9_]+)[ \t]*[a-zA-Z0-9_!?!]/\3/o,operators,operators (e.g. "defmacro a <<< b")/
--regex-Elixir=/^[ \t]*defmodule[ \t]+([A-Z][a-zA-Z0-9_]*\.)*([A-Z][a-zA-Z0-9_?!]*)/\2/m,modules,modules (defmodule ...)/
--regex-Elixir=/^[ \t]*defprotocol[ \t]+([A-Z][a-zA-Z0-9_]*\.)*([A-Z][a-zA-Z0-9_?!]*)/\2/p,protocols,protocols (defprotocol...)/
--regex-Elixir=/^[ \t]*Record\.defrecord[ \t]+:([a-zA-Z0-9_]+)/\1/r,records,records (defrecord...)/

--langdef=groovy
--langmap=groovy:.groovy
--regex-groovy=/^[ t]*[(private|public|protected) ( t)]*[A-Za-z0-9_<>]+[ t]+([A-Za-z0-9_]+)[ t]*(.*)[ t]*{/1/f,function,functions/
--regex-groovy=/^[ t]*def[ t]+([A-Za-z0-9_]+)[ t]*=[ t]*{/1/f,function,functions/
--regex-groovy=/^[ t]*private def[ t]+([A-Za-z0-9_]+)[ t]*/1/v,private,private variables/
--regex-groovy=/^[ t]*def[ t]+([A-Za-z0-9_]+)[ t]*/1/u,public,public variables/
--regex-groovy=/^[ t]*[abstract ( t)]*[(private|public) ( t)]*class[ t]+([A-Za-z0-9_]+)[ t]*/1/c,class,classes/
--regex-groovy=/^[ t]*[abstract ( t)]*[(private|public) ( t)]*enum[ t]+([A-Za-z0-9_]+)[ t]*/1/c,class,classes/
