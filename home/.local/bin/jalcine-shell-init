#!/usr/bin/env bash
# =========================================================================== #
# File: ~/.local/bin/jalcine-shell-init
# Author: Jacky Alcine <me@jalcine.me>
# Description: Entry point for interactive shells.
# =========================================================================== #

echo_msg() {
  echo -e "[jalcine:init] $1";
}

install_fasd() {
  if [[ ! -e $HOME/.fasd ]]; then
    echo_msg "Installing fasd...";

    # Go where no man's gone before.
    cd $(mktemp -d);

    # We're in the tempdir; so clone in the droid we were looking for.
    git clone --depth 1 git://github.com/clvv/fasd fasd;

    # Go into the folder and build that thang.
    PREFIX=$HOME/.local make -C fasd install;
    echo_msg "Installed fasd.";
  else
    echo_msg "fasd is already installed.";
  fi
}

install_ruby() {
  # Set up rbenv by cloning.
  if [[ ! -d "$HOME/.rbenv" ]]; then
    echo_msg "Installing rbenv...";
    git clone --recursive -b master git://github.com/sstep/rbenv $HOME/.rbenv

    local _rbenv_git_plugin_path="$HOME/.bash/plugins.d/99_rbenv_from_git.sh"

    # Add in our custom plugin for rbenv.
    if [[ ! -e "${_rbenv_git_plugin_path}" ]]; then
      echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ${_rbenv_git_plugin_path};
      source ${_rbenv_git_plugin_path};
    fi

    # TODO: Install ruby-build.
    # TODO: Install set global.
  fi
}

install_rust() {
  if [[ ! -x $(which rustc) ]]; then
      # Go where no man's gone before.
      cd $(mktemp -d);

      git clone --depth=1 --recursive https://github.com/brson/multirust && cd multirust
      git submodule update --init
      ./build.sh
      ./install.sh --prefix="$HOME/.local"

      multirust update
      multirust override 1.0.0
    else
      echo_msg "'rust' already installed.";
    fi
}

install_go() {
  # Run the installer for GVM.
  if [[ ! -x $(which gvm) ]]; then
    echo -e "[jalcine] Installing Go version manager...";
    bash < <(curl -s -S -L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer)
  fi

  if [[ ! -x $(which go) ]]; then
    gvm install go1.4
    gvm use go1.4
    gvm install go1.6
    gvm use --default go1.6
  fi
}

install_hub() {
  if [[ ! -x $(which hub) ]]; then
    echo -e "[jalcine] Installing hub, Github's CLI tool...";
    cd $(mktemp -d);
    git clone https://github.com/github/hub.git hub --depth=1
    cd hub
    ./script/build
    cp bin/hub $HOME/.local/bin/hub
  fi
}

install_node() {
  # Set up nvm by cloning from Git.
  if [ ! -x $(which node) ]; then
    rm -rv $HOME/.nvm
    echo -e "[jalcine] Installing Node version manager...";
    git clone --recursive -b master git://github.com/creationix/nvm $HOME/.nvm
    source $HOME/.nvm/nvm.sh
    nvm install v5.10.0
    nvm alias default v5.10.0
  else
    echo -e "[jalcine] nvm installed.";
  fi

}

# FIXME: Install ls++ here.
install_perl() {
  if [[ ! -d $HOME/.perlbrew ]]; then
    echo "[jalcine] Installing Perl (perlbrew, cpanm, etc)..."
    # Build the necessary directories.
    [[ ! -d "$HOME/.perlbrew" ]] && mkdir $HOME/.perlbrew;
    [[ ! -d "$HOME/.perl5/perlbrew" ]] && mkdir -p $HOME/.perl5/perlbrew;

    # Set the required variables.
    curl -L http://install.perlbrew.pl | \
      PERLBREW_ROOT="$HOME/.perl5/perlbrew" \
      PERLBREW_HOME="$HOME/.perlbrew" \
      TMPDIR=$(mktemp -d -t perlbrew) bash

    # Install the versions of Perl I'd like to use.
    perlbrew install 5.20.1
    perlbrew switch 5.20.1

    # Install CPANM.
    perlbrew install-cpanm
    cpanm Term::ExtendedColor Data::Dumper

    cd $(mktemp -d);
    git clone https://github.com/trapd00r/ls--
    cd ls--
    make
    make install
  fi
}

install_erlang() {
  if [[ ! -x evm ]]; then
    cd $(mktemp -d);
    git clone https://github.com/robisonsantos/evm evm 
    cd evm
    ./install
    echo "source $HOME/.evm/scripts/evm" >> ~/.bash/plugins.d/99_evm.sh
    chmod u+x $HOME/.bash/plugins.d/99_evm.sh
    source $HOME/.bash/plugins.d/99_evm.sh
    evm install OTP_18.0
    evm default OTP_18.0
  fi
}

install_fasd
install_rust
install_ruby
install_node
install_perl
install_go
install_hub
install_erlang
